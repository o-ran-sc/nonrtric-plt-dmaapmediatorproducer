definitions:
  jobs.BufferTimeout:
    properties:
      maxSize:
        description: The maximum number of messages to buffer before sending to consumer.
        type: integer
      maxTimeMilliseconds:
        description: The maximum time to wait before sending to consumer if the MaxSize
          has not been reached.
        type: integer
    type: object
  jobs.JobInfo:
    properties:
      info_job_data:
        $ref: '#/definitions/jobs.Parameters'
      info_job_identity:
        type: string
      info_type_identity:
        type: string
      last_updated:
        type: string
      owner:
        type: string
      target_uri:
        type: string
    type: object
  jobs.Parameters:
    properties:
      bufferTimeout:
        $ref: '#/definitions/jobs.BufferTimeout'
    type: object
  main.ServiceStatus:
    properties:
      registeredStatus:
        description: The registration status of the producer in Information Coordinator
          Service. Either `registered` or `not registered`
        example: registered
        type: string
    type: object
  server.ErrorInfo:
    properties:
      detail:
        description: A human-readable explanation specific to this occurrence of the
          problem.
        example: Info job type not found
        type: string
      instance:
        description: A URI reference that identifies the specific occurrence of the
          problem.
        type: string
      status:
        description: The HTTP status code generated by the origin server for this
          occurrence of the problem.
        example: 400
        type: integer
      title:
        description: A short, human-readable summary of the problem type.
        type: string
      type:
        description: A URI reference that identifies the problem type.
        type: string
    type: object
info:
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: DMaaP Mediator Producer
paths:
  /admin/log:
    put:
      description: Set the log level of the producer.
      parameters:
      - description: string enums
        enum:
        - Error
        - Warn
        - Info
        - Debug
        in: query
        name: level
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Problem as defined in https://tools.ietf.org/html/rfc7807
          headers:
            Content-Type:
              description: application/problem+json
              type: string
          schema:
            $ref: '#/definitions/server.ErrorInfo'
      summary: Set log level
      tags:
      - Admin
  /health_check:
    get:
      description: Get the status of the producer. Will show if the producer has registered
        in ICS.
      responses:
        "200":
          description: The status of the service
          schema:
            $ref: '#/definitions/main.ServiceStatus'
      summary: Get status
      tags:
      - Data producer (callbacks)
  /info_job:
    post:
      consumes:
      - application/json
      description: Callback for ICS to add an info job
      parameters:
      - description: Info job data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/jobs.JobInfo'
      responses:
        "200":
          description: OK
        "400":
          description: Problem as defined in https://tools.ietf.org/html/rfc7807
          headers:
            Content-Type:
              description: application/problem+json
              type: string
          schema:
            $ref: '#/definitions/server.ErrorInfo'
      summary: Add info job
      tags:
      - Data producer (callbacks)
  /info_job/{infoJobId}:
    delete:
      description: Callback for ICS to delete an info job
      parameters:
      - description: Info job ID
        in: path
        name: infoJobId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Delete info job
      tags:
      - Data producer (callbacks)
  /swagger/doc.json:
    get:
      description: Get the Swagger API documentation for the producer.
      responses:
        "200":
          description: OK
      summary: Get Swagger Documentation
      tags:
      - Admin
swagger: "2.0"
