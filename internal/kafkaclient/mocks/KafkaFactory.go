// -
//   ========================LICENSE_START=================================
//   O-RAN-SC
//   %%
//   Copyright (C) 2021-2022: Nordix Foundation
//   %%
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//        http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//   ========================LICENSE_END===================================
//

// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	kafkaclient "oransc.org/nonrtric/dmaapmediatorproducer/internal/kafkaclient"
)

// KafkaFactory is an autogenerated mock type for the KafkaFactory type
type KafkaFactory struct {
	mock.Mock
}

// NewKafkaClient provides a mock function with given fields: topicID
func (_m *KafkaFactory) NewKafkaClient(topicID string) (kafkaclient.KafkaClient, error) {
	ret := _m.Called(topicID)

	var r0 kafkaclient.KafkaClient
	if rf, ok := ret.Get(0).(func(string) kafkaclient.KafkaClient); ok {
		r0 = rf(topicID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(kafkaclient.KafkaClient)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(topicID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
